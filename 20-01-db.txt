1.	Selezionare tutti gli insegnanti
SELECT *	
FROM `teachers`;

2.	Selezionare tutti i referenti per ogni dipartimento
SELECT `id`,`name`,`head_of_departments`
FROM `departments`;

3.	Selezionare tutti gli studenti il cui nome inizia per "E" (373)
SELECT `id`,`name`,`surname`
FROM `students`
WHERE `name` LIKE “E%”;

4.	Selezionare tutti gli studenti che si sono iscritti nel 2021 (734)
SELECT * 
FROM `students`
WHERE `enrolment_date` BETWEEN “2021-01-01” AND “2021-12-31”;

5.	Selezionare tutti i corsi che non hanno un sito web (676)
SELECT `id`,`name`
FROM `courses`
WHERE `website` IS NULL;

6.	Selezionare tutti gli insegnanti che hanno un numero di telefono (50)
SELECT `id`,`name`
FROM  `teachers`
WHERE `phone` IS NOT NULL;

7.	Selezionare tutti gli appelli d'esame dei mesi di giugno e luglio 2020 (2634)
SELECT *
FROM `exams`
WHERE `date` BETWEEN “2020-06-01” AND “2020-07-31”;
8.	Qual è il numero totale degli studenti iscritti? (5000)
SELECT COUNT(`id`) AS `total_students`
FROM `students`;




2.1. Contare i corsi raggruppati per cfu
SELECT COUNT(`id`) AS `num_courses`,`cfu`
FROM `courses`
GROUP BY `cfu`
HAVING `numbers_courses`>  95;

2.2. Contare gli studenti raggruppati per anno di nascita
SELECT COUNT(`id`) AS `tot_students`, YEAR(`date_of_birth`) AS `birth_year`
FROM `students`
GROUP BY `birth_year`;

2.3. Selezionare il voto più basso dato ad ogni appello d'esame
SELECT `exam_id`, MIN(`vote`) AS `vote_min`
FROM `exam_student`
GROUP BY `exam_id`;

2.4. Contare gli appelli d'esame del mese di luglio raggruppati per giorno
SELECT COUNT(`id`) AS `num_appelli`, DAY(`date`) AS `day`
FROM `exams`
WHERE MONTH(`date`) = 7
GROUP BY DAY(`date`);




3.1. Contare quanti iscritti ci sono stati ogni anno
SELECT
COUNT(`enrolment_date`) AS `iscrizioni`,
YEAR(`enrolment_date`) AS `anno`
FROM `students`
GROUP BY `anno`
ORDER BY(`anno`) ASC;

3.2. Contare gli insegnanti che hanno l'ufficio nello stesso edificio
SELECT 
office_address,
COUNT(`name`)
FROM teachers
GROUP BY `office_address`;

3.3. Calcolare la media dei voti di ogni appello d'esame
SELECT
exams.location,
`exam_id` as `esame`,
AVG(`vote`) AS `media_voti`
FROM exam_student
INNER JOIN exams ON exam_student.exam_id = exams.id
GROUP BY `esame`;

3.4. Contare quanti corsi di laurea ci sono per ogni dipartimento
SELECT 
departments.name,
COUNT(courses.id)
FROM courses
INNER JOIN degrees ON courses.degree_id = degrees.id
INNER JOIN departments ON degrees.id = departments.id
GROUP BY departments.name;




4.1. Selezionare tutti gli studenti nati nel 1990 (160)
SELECT *
FROM students
WHERE YEAR(date_of_birth)= 1990;

4.2. Selezionare tutti i corsi che valgono più di 10 crediti (479)
SELECT * 
FROM courses
WHERE cfu > 10;

4.3. Selezionare tutti gli studenti che hanno più di 30 anni
SELECT * 
FROM `students`
WHERE YEAR(current_date()) - YEAR(date_of_birth) > 30
ORDER BY `date_of_birth` DESC;

SELECT * 
FROM `students` 
WHERE TIMESTAMPDIFF(YEAR, date_of_birth, CURDATE()) > 30
ORDER BY `date_of_birth` DESC;

4.4. Selezionare tutti i corsi del primo semestre del primo anno di un qualsiasi corso di
laurea (286)
SELECT *
FROM courses
WHERE `year` = 1
AND `period` = "I semestre";




4.5. Selezionare tutti gli appelli d'esame che avvengono nel pomeriggio (dopo le 14) del
20/06/2020 (21)
SELECT * 
FROM `exams`
WHERE TIME(hour) > '14:00:00'
AND DATE = '2020-06-20'
ORDER BY `hour` ASC;

4.6. Selezionare tutti i corsi di laurea magistrale (38)
SELECT * 
FROM `degrees`
WHERE `level` = "magistrale";

4.7. Da quanti dipartimenti è composta l'università? (12)
SELECT 
COUNT(`id`) AS `total_departments`
FROM `departments`;

4.8. Quanti sono gli insegnanti che non hanno un numero di telefono? (50)
SELECT
COUNT(*) 
FROM `teachers`
WHERE phone IS NOT NULL;

4.9. Inserire nella tabella degli studenti un nuovo record con i propri dati (per il campo
degree_id, inserire un valore casuale)
INSERT INTO `students` (degree_id,name,surname,date_of_birth,fiscal_code,enrolment_date,registration_number,email)
VALUES (1,"Gigi","Gigel","1997-08-03","giggg98m03z132f","2021-03-12","97316","ciaogigi@sonoio.com");
SELECT * 
FROM `students` 
WHERE name = 'Gigi';

4.10. Cambiare il numero dell’ufficio del professor Pietro Rizzo in 126
UPDATE `teachers`
SET `office_number` = 126
WHERE `id` = 125;

4.11. Eliminare dalla tabella studenti il record creato precedentemente al punto 9
DELETE FROM `students`
WHERE `degree_id` = 1 AND `name` = 'Gigi';
